<!-- Hive Metastore Configuration for PostgreSQL -->
<configuration>

  <!-- JDBC connection to external PostgreSQL Metastore DB -->
  <property>
    <name>javax.jdo.option.ConnectionURL</name>
    <value>jdbc:postgresql://hive-postgres:5432/metastore</value>
  </property>

  <!-- PostgreSQL JDBC driver class -->
  <property>
    <name>javax.jdo.option.ConnectionDriverName</name>
    <value>org.postgresql.Driver</value>
  </property>

  <!-- Metastore DB username -->
  <property>
    <name>javax.jdo.option.ConnectionUserName</name>
    <value>hiveuser</value>
  </property>

  <!-- Metastore DB password -->
  <property>
    <name>javax.jdo.option.ConnectionPassword</name>
    <value>hivepassword</value>
  </property>

  <!-- Location of the Hive Metastore (in hive-metastore container) -->
  <property>
    <name>hive.metastore.uris</name>
    <value>thrift://hive-metastore:9083</value>
  </property>

  <!-- Admin users for the metastore -->
  <property>
    <name>hive.metastore.admins</name>
    <value>hiveuser</value>
  </property>

  <!-- HDFS path for Hive warehouse -->
  <property>
    <name>hive.metastore.warehouse.dir</name>
    <value>/user/hive/warehouse</value>
  </property>

  <!-- Auto create schema and tables if not present -->
  <property>
    <name>datanucleus.autoCreateSchema</name>
    <value>true</value>
  </property>

  <property>
    <name>datanucleus.fixedDatastore</name>
    <value>true</value>
  </property>

  <property>
    <name>datanucleus.autoCreateTables</name>
    <value>true</value>
  </property>

  <!-- HiveServer2: Disable impersonation (run queries as Hive user) -->
  <property>
    <name>hive.server2.enable.doAs</name>
    <value>false</value>
  </property>

  <!-- No authentication for HiveServer2 (DEV mode only) -->
  <property>
    <name>hive.server2.authentication</name>
    <value>NONE</value>
  </property>

  <!-- Disable metastore event notifications (simpler setup) -->
  <property>
    <name>hive.metastore.event.db.notification.enable</name>
    <value>false</value>
  </property>

  <property>
    <name>hive.metastore.event.db.notification.api.auth</name>
    <value>false</value>
  </property>

  <!-- HiveServer2 binding host and port (default: 10000) -->
  <property>
    <name>hive.server2.thrift.bind.host</name>
    <value>0.0.0.0</value>
  </property>

  <property>
    <name>hive.server2.thrift.port</name>
    <value>10000</value>
  </property>

  <!-- Explicit port for Metastore (9083) -->
  <property>
    <name>hive.metastore.port</name>
    <value>9083</value>
  </property>

  <!-- Optional: idle timeout for HiveServer2 operations -->
  <property>
    <name>hive.server2.idle.operation.timeout</name>
    <value>60000</value>
  </property>
  <!-- Optional: max idle time for HiveServer2 sessions -->
     <property>
        <name>hive.execution.engine</name>
        <value>tez</value>
    </property>
  
    <property>
        <name>hive.aux.jars.path</name>
        <value>$TEZ_HOME/share/tez/tez.tar.gz</value>
    </property> 

  <!-- Transaction and concurrency settings -->
    <property>
      <name>hive.support.concurrency</name>
      <value>true</value>
    </property>
    <property>
      <name>hive.txn.manager</name>
      <value>org.apache.hadoop.hive.ql.lockmgr.DbTxnManager</value>
    </property>
    <property>
      <name>hive.compactor.initiator.on</name>
      <value>true</value>
    </property>
    <property>
      <name>hive.compactor.worker.threads</name>
      <value>1</value>
    </property>
    
    <!-- Dynamic partitioning settings -->
    <property>
      <name>hive.exec.dynamic.partition</name>
      <value>true</value>
    </property>
    <property>
      <name>hive.exec.dynamic.partition.mode</name>
      <value>nonstrict</value>
    </property>
    
    <!-- Bucketing and sorting -->
    <property>
      <name>hive.enforce.bucketing</name>
      <value>true</value>
    </property>
    <property>
      <name>hive.enforce.sorting</name>
      <value>true</value>
    </property>
    
    <!-- Optimization settings -->
    <property>
      <name>hive.auto.convert.join</name>
      <value>true</value>
    </property>
    
    <!-- Parquet compression -->
    <property>
      <name>parquet.compression</name>
      <value>SNAPPY</value>
    </property>
  </configuration>